buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
        springCloudVersion = 'Finchley.SR2'
    }
    repositories {
        mavenCentral()
//        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // protobuf-gradle-plugin
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    apply plugin: 'com.google.protobuf'

    group 'com.xingyun.zuul'
    version '0.0.1'
    sourceCompatibility = 1.8
    repositories {
        mavenCentral()
    }
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('com.google.protobuf:protobuf-java:3.4.0')
        compile('com.googlecode.protobuf-java-format:protobuf-java-format:1.4')
        compile 'com.squareup.okhttp3:okhttp:3.10.0'
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    // 由这个统一管理spring cloud的版本
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'


    configurations {
        //在整个构建过程中排除spring-boot-starter-logging,集成log4j2
        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:3.5.1-1"
        }
        plugins {
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.17.1'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }
}

sourceSets{
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/proto'
        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/proto'
        }
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

subprojects {

    jar{
        baseName = 'xingyun-' + project.name
        enabled = true
    }

    bootJar {
        baseName = 'xingyun-' + project.name
    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }

    dependencies {
    }
}


